// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PenaltyCalculation.Persistence.Context;

#nullable disable

namespace PenaltyCalculation.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PenaltyCalculation.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryCode = "111",
                            Currency = "Turk Lirasi",
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = 2,
                            CountryCode = "222",
                            Currency = "Cezayir Dinari",
                            Name = "Cezayir"
                        },
                        new
                        {
                            Id = 3,
                            CountryCode = "333",
                            Currency = "Euro",
                            Name = "Hollanda"
                        });
                });

            modelBuilder.Entity("PenaltyCalculation.Domain.Entities.NationalHoliday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("HolidayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("NationalHolidays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Date = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HolidayName = "İşçi Bayramı"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Date = new DateTime(2020, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HolidayName = "Milli Bayram"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Date = new DateTime(2020, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HolidayName = "Paskalya"
                        });
                });

            modelBuilder.Entity("PenaltyCalculation.Domain.Entities.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CheckedOut")
                        .HasColumnType("datetime");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("QueryPenalty")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Returned")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("PenaltyCalculation.Domain.Entities.NationalHoliday", b =>
                {
                    b.HasOne("PenaltyCalculation.Domain.Entities.Country", "Country")
                        .WithMany("NationalHolidays")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PenaltyCalculation.Domain.Entities.Registration", b =>
                {
                    b.HasOne("PenaltyCalculation.Domain.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PenaltyCalculation.Domain.Entities.Country", b =>
                {
                    b.Navigation("NationalHolidays");
                });
#pragma warning restore 612, 618
        }
    }
}
